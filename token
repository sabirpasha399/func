// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

contract Token is ERC20, ERC20Burnable, Ownable(msg.sender) {
    constructor(string memory _name, string memory _symbol) ERC20(_name, _symbol) {}

    function mintTokens(address _recipient, uint256 _amount) external onlyOwner {
        _mint(_recipient, _amount);
    }

    function burnTokens(uint256 _amountToAnnihilate) public  {
        _burn(msg.sender, _amountToAnnihilate);
    }

    function transferTokens(address _receiver, uint256 _amount) public virtual  returns (bool) {
        _transfer(_msgSender(), _receiver, _amount);
        return true;
    }
}
